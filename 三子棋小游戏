#include<stdio.h>
#include<time.h>
#include<stdlib.h>
int ROW=3;//棋盘行数
int COL=3;//棋盘列数
int isfull(char board[ROW][COL],int ROW,int COL)
{
    int i=0,j=0;
    for(i=0;i<ROW;i++)
    {
        for(j=0;j<COL;j++)
        {
            if(board[i][j]==' ')
            return 0;
        }
    }
    return 1;
}
char win(char board[ROW][COL],int ROW,int COL)
{
    int i=0;
    //横三行
    for(i=0;i<ROW;i++)
    {
        if(board[i][0]==board[i][1]&&board[i][1]==board[i][2]&&board[i][1]!=' ')
        return board[i][1];
    }
    //竖三列
    for(i=0;i<COL;i++)
    {
        if(board[0][i]==board[1][i]&&board[1][i]==board[2][i]&&board[1][i]!=' ')
        return board[1][i];
    }
    //斜
    if(board[0][0]==board[1][1]&&board[1][1]==board[2][2]&&board[1][1]!=' ')
    return board[1][1];
    if(board[2][0]==board[1][1]&&board[1][1]==board[0][2]&&board[1][1]!=' ')
    return board[1][1];
    if(1==isfull(board,ROW,COL))
    return 'Q';
    else
    return 'C';
}
void Playermove(char board[ROW][COL],int ROW,int COL)
{
    int x=0,y=0;
    printf("玩家走:>\n");
    while(1)
    {
        printf("请输入要下的坐标:>");
        scanf("%d%d",&x,&y);
        if( x>=1 && x<=ROW && y<=COL && y>=1 )//判断坐标合法性
        {
            if(board[x-1][y-1]==' ')
            {
                board[x-1][y-1]='*';
                break;
            }
            else
            printf("该坐标被占用，请重新输入！\n");
        }
        else
        {
            printf("输入坐标不合法，请重新输入!\n");
        }
    }

}
void pcmove(char board[ROW][COL],int ROW,int COL)
{
    int x=0,y=0;
    printf("电脑走：>\n");
    while(1)
    {
        x=rand()%ROW;
        y=rand()%COL;
        if(board[x][y]==' ')
        {
            board[x][y]='#';
            break;
        }
    }
}
void initboard(char board[ROW][COL],int ROW,int COL)
{
    int i=0,j=0;
    for(i=0;i<ROW;i++)
    {
        for(j=0;j<COL;j++)
        {
            board[i][j]=' ';
        }
    }
}
void displayboard(char board[ROW][COL],int ROW,int COL)
{
    int i=0,j=0;
    for(i=0;i<ROW;i++)
    {
        if(i==ROW-1)
        {
            for(j=0;j<COL;j++)
            {
                if(j==COL-1)
                printf(" %c \n",board[i][j]);
                else
                printf(" %c |",board[i][j]);
            }
        }
        else
        {
            for(j=0;j<COL;j++)
            {
                if(j==COL-1)
                printf(" %c \n",board[i][j]);
                else
                printf(" %c |",board[i][j]);
            }
            for(j=0;j<COL;j++)
            {  
                if(j==COL-1)
                printf("---\n");
                else
                printf("---|");
            }
        }
    }
}
void game()//游戏主体
{
    char board[ROW][COL];
    //创建棋盘
    initboard(board,ROW,COL);
    //初始化棋盘
    displayboard(board,ROW,COL);
    char ret=0;
    //打印棋盘
    while(1)//开始下棋
    {
        Playermove(board,ROW,COL);//玩家下棋
        displayboard(board,ROW,COL);
        ret=win(board,ROW,COL);//判断输赢
        if(ret!='C')
        break;
        pcmove(board,ROW,COL);//电脑下棋
        displayboard(board,ROW,COL);
        ret=win(board,ROW,COL);
        if(ret!='C')
        break;
    }
    if(ret=='*')
    printf("玩家赢\n");
    else if(ret=='#')
    printf("电脑赢\n");
    else
    printf("平局\n");
}
void menu()//游戏菜单
{
    printf("******************************\n");
    printf("******  1.play  0.exit  ******\n");
    printf("******************************\n");
}
void test()//菜单选择环节
{
    do
    {
        int a=0;
        menu();
        printf("请输入:>");
        scanf("%d",&a);
        if(a==1)
        {
            printf("三子棋\n");
            game();
            printf("游戏结束，要再玩一次吗\n");
        }
        else if(a==0)
        {
            printf("退出游戏\n");
            return;
        }
        else
        printf("输入错误，请重新输入\n");
    } while (1);
    
}
int main()//主函数
{
    srand((unsigned)time(NULL));
    test();
    return 0;
}
